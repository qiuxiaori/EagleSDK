{"version":3,"file":"item.js","sourceRoot":"","sources":["../../../src/api-endpoint/item.ts"],"names":[],"mappings":";;;AACA,iCAA6B;AAyC7B,MAAa,IAAK,SAAQ,WAAI;IAC1B;;OAEG;IACH,KAAK,CAAC,UAAU,CAAC,IAA0B;QACvC,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,kBAAkB;YACvB,MAAM,EAAE,MAAM;YACd,IAAI;SACP,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,WAAW,CAAC,IAA2B;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,mBAAmB;YACxB,MAAM,EAAE,MAAM;YACd,IAAI;SACP,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,WAAW,CAAC,IAA2B;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,mBAAmB;YACxB,MAAM,EAAE,MAAM;YACd,IAAI;SACP,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,YAAY,CAAC,IAA4B;QAC3C,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,oBAAoB;YACzB,MAAM,EAAE,MAAM;YACd,IAAI;SACP,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,WAAW,CAAC,IAA2B;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,mBAAmB;YACxB,MAAM,EAAE,MAAM;YACd,IAAI;SACP,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,IAAI,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,oBAAoB,IAAI,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE,EAAE;SACtD,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,WAAW,CAAC,OAAiB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,mBAAmB;YACxB,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,EAAE,OAAO,EAAE;SACpB,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,SAAS,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,yBAAyB,IAAI,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE,EAAE;SAC3D,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,gBAAgB,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,wBAAwB;YAC7B,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,EAAE,EAAE,EAAE;SACf,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,IAAI,CAAC,IAAoB;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,YAAY;YACjB,MAAM,EAAE,MAAM;YACd,IAAI;SACP,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,cAAc,CAAC,EAAU;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,sBAAsB;YAC3B,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,EAAE,EAAE,EAAE;SACf,CAAC,CAAA;IACN,CAAC;IACD;;OAEG;IACH,KAAK,CAAC,MAAM,CAAC,IAAsB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC;YAChB,GAAG,EAAE,sBAAsB;YAC3B,MAAM,EAAE,MAAM;YACd,IAAI;SACP,CAAC,CAAA;IACN,CAAC;CACJ;AArHD,oBAqHC","sourcesContent":["import { ResponseBody } from '../../index'\nimport { Base } from './base'\nimport { FolderId } from './folder'\n\ntype Timestamp = number\n\ntype BaseItem = {\n    name: string\n    website?: string\n    tags?: string[]\n    annotation?: string\n    modificationTime?: Timestamp\n}\ntype AddFromURLParameters = { url: string } & BaseItem & Partial<FolderId>\ntype AddFromURLsParameters = {\n    items: AddFromURLParameters[]\n} & Partial<FolderId>\ntype AddFromPathParameters = { path: string } & BaseItem & Partial<FolderId>\ntype AddFromPathsParameters = {\n    items: AddFromPathParameters[]\n} & Partial<FolderId>\ntype AddBookmarkParameters = BaseItem & {\n    url: string\n    base64?: string\n}\ntype ListParameters = {\n    limit?: number\n    offset?: number\n    orderBy?: 'CREATEDATE' | 'FILESIZE' | 'NAME' | 'RESOLUTION' | '-CREATEDATE' | '-FILESIZE' | '-NAME' | '-RESOLUTION'\n    keyword?: string\n    ext?: string\n    tags?: string[]\n    folders?: string[]\n}\ntype UpdateParameters = {\n    id: string\n    url?: string\n    tags?: string[]\n    annotation?: string\n    star?: 1 | 2 | 3 | 4 | 5\n}\n\nexport class Item extends Base {\n    /**\n     * 从链接添加文件\n     */\n    async addFromURL(data: AddFromURLParameters): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/addFromURL`,\n            method: 'post',\n            data,\n        })\n    }\n    /**\n     * 从多个链接添加文件\n     */\n    async addFromURLs(data: AddFromURLsParameters): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/addFromURLs`,\n            method: 'post',\n            data,\n        })\n    }\n    /**\n     * 添加本地文件\n     */\n    async addFromPath(data: AddFromPathParameters): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/addFromPath`,\n            method: 'post',\n            data,\n        })\n    }\n    /**\n     * 添加多个本地文件\n     */\n    async addFromPaths(data: AddFromPathsParameters): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/addFromPaths`,\n            method: 'post',\n            data,\n        })\n    }\n    /**\n     * 添加书签\n     */\n    async addBookmark(data: AddBookmarkParameters): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/addBookmark`,\n            method: 'post',\n            data,\n        })\n    }\n    /**\n     * 详情\n     */\n    async info(id: string): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/info?token=${this.opts.token}&id=${id}`,\n        })\n    }\n    /**\n     * 移到回收站\n     */\n    async moveToTrash(itemIds: string[]): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/moveToTrash`,\n            method: 'post',\n            data: { itemIds },\n        })\n    }\n    /**\n     * 获取缩略图\n     */\n    async thumbnail(id: string): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/thumbnail?token=${this.opts.token}&id=${id}`,\n        })\n    }\n    /**\n     * 刷新缩略图\n     */\n    async refreshThumbnail(id: string): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/refreshThumbnail`,\n            method: 'post',\n            data: { id },\n        })\n    }\n    /**\n     * 项目列表\n     */\n    async list(data: ListParameters): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/list`,\n            method: 'post',\n            data,\n        })\n    }\n    /**\n     * 重新分析颜色\n     */\n    async refreshPalette(id: string): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/refreshPalette`,\n            method: 'post',\n            data: { id },\n        })\n    }\n    /**\n     * 修改项目信息\n     */\n    async update(data: UpdateParameters): Promise<ResponseBody> {\n        return this.request({\n            url: `/item/refreshPalette`,\n            method: 'post',\n            data,\n        })\n    }\n}\n"]}