{"version":3,"file":"folder.test.js","sourceRoot":"","sources":["../../test/folder.test.ts"],"names":[],"mappings":";;AAAA,gCAAiC;AAEjC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACpB,MAAM,GAAG,GAAG,IAAI,cAAQ,CAAC;QACrB,KAAK,EAAE,sCAAsC;KAChD,CAAC,CAAA;IAEF,SAAS,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAA;IAEnB,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;QACpB,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;YACrB,IAAI,KAAK,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;YACnC,IAAI,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAA;YACvD,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAA;YAC1B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YACnC,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAA;YACtE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACpC,IAAI,KAAK,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;YACnC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QAC5D,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;YACrB,IAAI,KAAK,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,CAAA;YACzC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;QAC5C,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE;QACzB,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;YACrB,IAAI,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAA;YACvD,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAA;YAC1B,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAA;YAC3D,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACpC,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAA;YAC5D,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QACzC,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA","sourcesContent":["import { EagleSDK } from '../src'\n\ndescribe('Folder', () => {\n    const sdk = new EagleSDK({\n        token: '1364ff15-4a7c-470b-9124-7739101c367b',\n    })\n\n    beforeAll(() => {})\n\n    describe('create', () => {\n        it('success', async () => {\n            let list1 = await sdk.folder.list()\n            let res = await sdk.folder.create({ folderName: '测试' })\n            let folderId = res.data.id\n            expect(res.data.name).toEqual('测试')\n            res = await sdk.folder.create({ folderName: '测试2', parent: folderId })\n            expect(res.data.name).toEqual('测试2')\n            let list2 = await sdk.folder.list()\n            expect(list2.data.length).toEqual(list1.data.length + 1)\n        })\n    })\n\n    describe('listRecent', () => {\n        it('success', async () => {\n            let list1 = await sdk.folder.listRecent()\n            expect(list1.data.length).not.toEqual(0)\n        })\n    })\n\n    describe.skip('rename', () => {\n        it('success', async () => {\n            let res = await sdk.folder.create({ folderName: '测试' })\n            let folderId = res.data.id\n            res = await sdk.folder.rename({ folderId, newName: '新测试' })\n            expect(res.data.name).toEqual('新测试')\n            res = await sdk.folder.update({ folderId, newName: '新新测试' })\n            expect(res.data.name).toEqual('新新测试')\n        })\n    })\n})\n"]}